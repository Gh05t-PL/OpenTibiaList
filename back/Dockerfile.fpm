FROM php:7.4-fpm-buster AS base

RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
    && php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" \
    && php composer-setup.php \
    && php -r "unlink('composer-setup.php');" \
    && mv composer.phar /usr/local/bin/composer

RUN pecl install -o -f redis \
    && rm -rf /tmp/pear \
    && docker-php-ext-enable redis

RUN apt update \
    && apt install -y libzip-dev libxml2-dev libcurl4-openssl-dev pkg-config libssl-dev openssl libcurl4-openssl-dev

RUN pecl install -o -f mongodb \
    && rm -rf /tmp/pear \
    && docker-php-ext-enable mongodb

RUN docker-php-ext-install \
    bcmath \
    sockets \
    zip \
    pdo \
    xml \
    ctype

RUN apt install librabbitmq-dev -y \
    && pecl install amqp \
    && docker-php-ext-enable amqp

RUN docker-php-ext-install opcache
COPY .docker/config/opcache.ini /usr/local/etc/php/conf.d/opcache.ini

RUN apt install cron -y

COPY .docker/entry.bash /entry.bash
RUN chmod +x /entry.bash
ENTRYPOINT /entry.bash

# ##########################
FROM base as prod-build

COPY .docker/fpm/custom.ini /usr/local/etc/php-fpm.d/www.conf
COPY .docker/fpm/php.ini /usr/local/etc/php/conf.d/php-add.ini
COPY .docker/config/opcache.ini /usr/local/etc/php/conf.d/opcache.ini

COPY .docker/crons/* /etc/cron.d/

COPY . /var/www/
